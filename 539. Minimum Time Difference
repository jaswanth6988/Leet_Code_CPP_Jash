class Solution {
public:
    int timeToMinutes(const string& time) {
        return stoi(time.substr(0, 2)) * 60 + stoi(time.substr(3, 2));
    }
    int findMinDifference(vector<string>& timePoints) {
        vector<int> minutes;
    
    for (int i = 0; i < timePoints.size(); i++) {
        minutes.push_back(timeToMinutes(timePoints[i]));
    }
    
    sort(minutes.begin(), minutes.end());
    
    int minDiff = 1440; // Maximum possible difference (24 hours in minutes)
    
    for (int i = 1; i < minutes.size(); i++) {
        minDiff = min(minDiff, minutes[i] - minutes[i - 1]);
    }
    
    minDiff = min(minDiff, 1440 - (minutes.back() - minutes[0]));
    
    return minDiff;
    }
};
//jaswanth6988
